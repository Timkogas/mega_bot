<!DOCTYPE html>
<html lang="en">

<head>
    <script src="https://cdn.jsdelivr.net/npm/ag-grid-community/dist/ag-grid-community.min.js"></script>
    <style>
        body {
            font-family: Arial, Helvetica, sans-serif;
            margin: 20px;
        }

        .ag-center-cols-container {
            width: 100% !important;
            min-width: 100% !important;
            text-wrap: wrap !important;
        }

        .ag-header-cell-label .ag-header-cell-text {
            white-space: normal !important;
        }

        .ag-header-row {
            height: 80px !important;
        }

        #myGrid {
            height: 60vh;
            width: 100%;
        }
    </style>


</head>

<body style="font-family: Arial, Helvetica, sans-serif;">

    <h1>Статистика</h1>

    <h2>Результаты сессий сканирования чеков</h2>
    <div id="myGrid" class="ag-theme-alpine"></div>

    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            const gridDiv = document.querySelector('#myGrid');

            const response = await fetch('/adminstats/getStatPlatform');
            const { userActivityStats } = await response.json();
            console.log(userActivityStats);

            const columnDefs = [
                { field: "id", headerName: "Платформа", suppressMovable: true, flex: 1 },
                { field: "total_launches", headerName: "Общее количество запусков чат-бота", suppressMovable: true, flex: 1 },
                { field: "unique_users", headerName: "Количество уникальных пользователей, запустивших чат-бот", suppressMovable: true, flex: 1 },
                { field: "total_web_app_launches", headerName: "Общее количество запусков Web-App", suppressMovable: true, flex: 1 },
                { field: "unique_web_app_users", headerName: "Количество уникальных пользователей, запустивших Web-App", suppressMovable: true, flex: 1 },
                { field: "game_sessions", headerName: "Количество пользователей, завершивших игровую сессию", suppressMovable: true, flex: 1 },
            ];

            const createTree = (data, parent) => {
                return data.map(item => ({
                    ...item,
                    children: item[parent] ? createTree(item[parent], "channels") : null,
                }));
            };

            const treeData = createTree(userActivityStats, null);

            const gridOptions = {
                columnDefs: columnDefs,
                rowData: treeData,
                suppressMenu: true,
                suppressSorting: true,
                suppressFilter: true,
                suppressMovable: true,
                autoHeight: true,
                domLayout: 'autoHeight',
                animateRows: true,
            };

            const grid = new agGrid.Grid(gridDiv, gridOptions);

        });
    </script>

</body>

</html>