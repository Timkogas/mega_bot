<!DOCTYPE html>
<html lang="en">

<head>
    <script src="https://cdn.jsdelivr.net/npm/ag-grid-community/dist/ag-grid-community.min.js"></script>
    <style>
        body {
            font-family: Arial, Helvetica, sans-serif;
            margin: 20px;
        }

        .ag-center-cols-container {
            width: 100% !important;
            min-width: 100% !important;
            text-wrap: wrap !important;
        }

        .ag-header-cell-label .ag-header-cell-text {
            white-space: normal !important;
        }

        .ag-header-row {
            height: 80px !important;
        }

        #myGrid {
            height: 60vh;
            width: 100%;
        }
    </style>


</head>

<body style="font-family: Arial, Helvetica, sans-serif;">
    <div style="display: flex; gap: 10px;">
        <a href="https://server.mega.irsapp.ru/adminstats/all">Вся Статистика</a>
        <a href="https://server.mega.irsapp.ru/adminstats/results">Результаты юзеров</a>
        <a href="https://server.mega.irsapp.ru/adminstats/detail">Детальная статистика</a>
        <a href="https://server.mega.irsapp.ru/adminstats/problems">Проблемы</a>
        <a href="https://server.mega.irsapp.ru/adminstats/platforms">Статистика посевов</a>
        <a href="https://server.mega.irsapp.ru/adminstats/send">Отправка уведомлений</a>
    </div>
    <h1>Статистика</h1>

    <h2>Статистика посевов</h2>
    <div id="myGrid" class="ag-theme-alpine"></div>

    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            const gridDiv = document.querySelector('#myGrid');


            const response = await fetch('/adminstats/getStatPlatform');
            const { userActivityStats } = await response.json();
            console.log(userActivityStats)
            const flattenData = (data) => {
                return data.reduce((result, platform) => {

                    const platformData = {
                        platform_id: platform.id,
                        total_launches: platform.total_launches,
                        unique_users: platform.unique_users,
                        total_web_app_launches: platform.total_web_app_launches,
                        unique_web_app_users: platform.unique_web_app_users,
                        game_sessions: platform.game_sessions,
                    };

                    result.push(platformData);

                    const channels = platform.channels.reduce((channelResult, channel) => {
                        const channelData = {
                            platform_id: platform.id,
                            channel_id: channel.id,
                            total_launches: channel.total_launches,
                            unique_users: channel.unique_users,
                            total_web_app_launches: channel.total_web_app_launches,
                            unique_web_app_users: channel.unique_web_app_users,
                            game_sessions: channel.game_sessions,
                        };

                        channelResult.push(channelData);

                        const creatives = channel.creatives.map((creative) => ({
                            platform_id: platform.id,
                            channel_id: channel.id,
                            creative_id: creative.id,
                            total_launches: creative.total_launches,
                            unique_users: creative.unique_users,
                            total_web_app_launches: creative.total_web_app_launches,
                            unique_web_app_users: creative.unique_web_app_users,
                            game_sessions: creative.game_sessions,
                        }));

                        return channelResult.concat(creatives);
                    }, []);

                    result = result.concat(channels);

                    return result;
                }, []);
            };
            const flattenedData = flattenData(userActivityStats);

            const columnDefs = [
                { field: 'platform_id', headerName: 'Платформа', suppressMovable: true, flex: 1, rowGroup: true },
                { field: 'channel_id', headerName: 'Канал', suppressMovable: true, flex: 1, rowGroup: true },
                { field: 'creative_id', headerName: 'Креатив', suppressMovable: true, flex: 1, rowGroup: true },
                { field: 'total_launches', headerName: 'Общее количество запусков чат-бота', suppressMovable: true, flex: 1 },
                { field: 'unique_users', headerName: 'Количество уникальных пользователей, запустивших чат-бот', suppressMovable: true, flex: 1 },
                { field: 'total_web_app_launches', headerName: 'Общее количество запусков Web-App', suppressMovable: true, flex: 1 },
                { field: 'unique_web_app_users', headerName: 'Количество уникальных пользователей, запустивших Web-App', suppressMovable: true, flex: 1 },
                { field: 'game_sessions', headerName: 'Количество пользователей, завершивших игровую сессию', suppressMovable: true, flex: 1 },
            ];
            console.log(userActivityStats)
            console.log(flattenedData)

            const gridOptions = {
                columnDefs: columnDefs,
                rowData: flattenedData,
                suppressMenu: true,
                suppressSorting: true,
                suppressFilter: true,
                suppressMovable: true,
                autoHeight: true,
                domLayout: 'autoHeight',
            };

            const grid = new agGrid.Grid(gridDiv, gridOptions);

        });
    </script>

</body>

</html>